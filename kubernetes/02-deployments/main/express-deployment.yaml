apiVersion: apps/v1
kind: Deployment
metadata:
  name: express-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: backend
  template:
    metadata:
      labels:
        component: backend
    spec:
      containers:
      - name: queueing-express
        image: asia.gcr.io/tsri-268903/queueing-express
        resources:
            requests:
              cpu: "0.1"
              memory: "128Mi"
            limits:
              cpu: "0.3"
              memory: "256Mi"
        ports:
          - containerPort: 3000
        env:
          - name: NODE_ENV
            value: k8s-development
          - name: RABBITMQ_HOST
            value: rabbitmq-cluster-ip-service
          - name: RABBITMQ_PORT
            value: '5672'
          - name: MARIADB_HOST
            value: 127.0.0.1
          - name: MARIADB_USER
            value: queueing-access
          - name: MARIADB_PORT
            value: '3306'
          - name: MARIADB_DATABASE
            value: queueing
          - name: ENDPOINT
            value: https://meawtsri.com/ws/project_analysis/result
          - name: SERVER_ADDRESS
            value: https://api.meawtsri.com
          - name: MARIADB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mariadbpassword
                key: MARIADB_PASSWORD
          - name: REDIS_HOST
            value: redis-cluster-ip-service
          - name: API_KEY
            valueFrom:
              secretKeyRef:
                name: apikey
                key: API_KEY
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.16
        resources:
            requests:
              cpu: "0.2"
              memory: "128Mi"
            limits:
              cpu: "0.3"
              memory: "512Mi"
        command: ["/cloud_sql_proxy",
                  "-instances=tsri-268903:asia-southeast1:queueing-db=tcp:3306",
                  # If running on a VPC, the Cloud SQL proxy can connect via Private IP. See:
                  # https://cloud.google.com/sql/docs/mysql/private-ip for more info.
                  "-ip_address_types=PRIVATE",
                  "-credential_file=/secrets/cloudsql/queueing-db-agent.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
      imagePullSecrets:
        - name: gcr-json-key
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials